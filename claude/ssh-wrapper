#!/bin/sh
#/ Usage: claude-ssh-wrapper <claude-binary> [<claude-args>...]
#/ Run Claude with macOS keychain unlocked in SSH/Mosh sessions.
set -e

# Help text
test "${1:-}" = "--help" && {
  grep ^#/ <"$0" | cut -c4-
  exit 2
}

# First argument is the real claude path, rest are claude arguments
CLAUDE="$1"
shift

# Only try to unlock keychain if we have access to a TTY for password input
# Check if we can access /dev/tty for interactive password entry
if { [ -t 0 ] || [ -c /dev/tty ]; } && ! security show-keychain-info ~/Library/Keychains/login.keychain-db >/dev/null 2>&1; then
  # Keychain is locked, try to unlock it
  # Always use /dev/tty for password prompt if available
  if [ -c /dev/tty ]; then
    if ! security unlock-keychain ~/Library/Keychains/login.keychain-db </dev/tty; then
      # If unlock fails, exit
      exit 1
    fi
  else
    if ! security unlock-keychain ~/Library/Keychains/login.keychain-db; then
      # If unlock fails, exit
      exit 1
    fi
  fi
fi

# Execute real claude normally, replacing this process entirely
exec "$CLAUDE" "$@"